/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ToString, ToStringInterface } from "../ToString";

const _abi = [
  {
    inputs: [
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "fromUint256",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_name",
        type: "string",
      },
    ],
    name: "isValidContract",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6103476100186300000000396103476000016300000000f3600436101561000d5761033c565b60003560e01c346103425763a2bd364481186102c8576004356100a25760208060805260016040527f30000000000000000000000000000000000000000000000000000000000000006060526040816080018151808252602083016020830181518152505050805180602083010181600003601f163682375050601f19601f82516020010116905090508101905060806102c6565b600060c05260c08051806040525050604e60c0526000604e905b8060e052604e60c051186100f157600435604e60e05110156103425760e051600a0a80801561034257820490509050156100f4565b60005b156101005760e05160c0525b600435604e604d60e0518082106103425780820390509050101561034257604d60e0518082106103425780820390509050600a0a80801561034257820490509050600a80820690509050603081818301106103425780820190509050610100526101005161016052610160602060201161034257601f810180516101a052506001610180526101809050805180610120526020820180516101405250505060006040518161018001818183606060045afa50508082019150506101205181610180016101405181525080820191505080610160526101605050604e6102006101605161018060045afa6101f8573d600060003e3d6000fd5b6101e0604e3d80821161020b578161020d565b805b90509050815280518060405260208201816060838360045afa9050905050506001018181186100bc57505060208061016052604e60c051808210610342578082039050905060c05160405181830111610342578160600181610100838360045afa50508060e05260e0905090508161016001815180825260208301602083018281848460045afa905090505050805180602083010181600003601f163682375050601f19601f8251602001011690509050810190506101605bf35b63a7a66fa6811861033a57600435600401600c81351161034257803580604052602082018035606052505050600860c0527f546f537472696e6700000000000000000000000000000000000000000000000060e05260c080516020820120905060405160602014610100526020610100f35b505b60006000fd5b600080fd";

type ToStringConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ToStringConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ToString__factory extends ContractFactory {
  constructor(...args: ToStringConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ToString> {
    return super.deploy(overrides || {}) as Promise<ToString>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ToString {
    return super.attach(address) as ToString;
  }
  override connect(signer: Signer): ToString__factory {
    return super.connect(signer) as ToString__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ToStringInterface {
    return new utils.Interface(_abi) as ToStringInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ToString {
    return new Contract(address, _abi, signerOrProvider) as ToString;
  }
}
