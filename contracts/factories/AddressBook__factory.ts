/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { AddressBook, AddressBookInterface } from "../AddressBook";

const _abi = [
  {
    inputs: [
      {
        name: "_governance",
        type: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        name: "newGovernance",
        type: "address",
      },
    ],
    name: "updateGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_type",
        type: "string",
      },
      {
        name: "_address",
        type: "address",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "arg0",
        type: "string",
      },
    ],
    name: "addressOf",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingGovernance",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60206102066000396000518060a01c610201576040526040516001556101cc6100346300000000396101cc6000016300000000f3600436101561000d576101c1565b60003560e01c346101c75763b25612638118610042576004358060a01c6101c75760405260015433186101c757604051600255005b63238efcbc81186100635760025433186101c7576002546001556000600255005b639b2ea4bd811861014857600435600401600c8135116101c7578035806040526020820180356060525050506024358060a01c6101c75760805260015433186101c757600163a7a66fa660a05260208060c0528060c0016040518082526020820160605181525050805180602083010181600003601f163682375050601f19601f82516020010116905081015050602060a0606460bc60006080515af161010f573d600060003e3d6000fd5b60203d106101c75760a0518060011c6101c7576101205261012051186101c7576080516000604051606020602052600052604060002055005b63ccf1454a811861019157600435600401600c8135116101c757803580604052602082018035606052505050600060405160602060205260005260406000205460805260206080f35b635aa6e67581186101a85760015460405260206040f35b63f39c38a081186101bf5760025460405260206040f35b505b60006000fd5b600080fd005b600080fd";

type AddressBookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressBookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressBook__factory extends ContractFactory {
  constructor(...args: AddressBookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _governance: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AddressBook> {
    return super.deploy(_governance, overrides || {}) as Promise<AddressBook>;
  }
  override getDeployTransaction(
    _governance: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_governance, overrides || {});
  }
  override attach(address: string): AddressBook {
    return super.attach(address) as AddressBook;
  }
  override connect(signer: Signer): AddressBook__factory {
    return super.connect(signer) as AddressBook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressBookInterface {
    return new utils.Interface(_abi) as AddressBookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressBook {
    return new Contract(address, _abi, signerOrProvider) as AddressBook;
  }
}
